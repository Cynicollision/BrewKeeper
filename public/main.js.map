{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/brew-dialog/brew-dialog.component.html","webpack:///./src/app/brew-dialog/brew-dialog.component.scss","webpack:///./src/app/brew-dialog/brew-dialog.component.ts","webpack:///./src/app/brew-list/brew-list.component.html","webpack:///./src/app/brew-list/brew-list.component.scss","webpack:///./src/app/brew-list/brew-list.component.ts","webpack:///./src/app/brew.service.ts","webpack:///./src/app/dialog.service.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/list/list.component.html","webpack:///./src/app/list/list.component.scss","webpack:///./src/app/list/list.component.ts","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.scss","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BrewListComponent } from './brew-list/brew-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'brews', component: BrewListComponent },\r\n  { path: 'callback', component: HomeComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\"\\r\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\r\\n      [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\r\\n      [opened]=\\\"!(isHandset$ | async)\\\">\\r\\n    <mat-toolbar>Menu</mat-toolbar>\\r\\n    <app-nav></app-nav>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content>\\r\\n    <mat-toolbar color=\\\"primary\\\">\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        aria-label=\\\"Toggle sidenav\\\"\\r\\n        mat-icon-button\\r\\n        (click)=\\\"drawer.toggle()\\\"\\r\\n        *ngIf=\\\"isHandset$ | async\\\">\\r\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\r\\n      </button>\\r\\n      <span id=\\\"title\\\">Brew Keeper</span>\\r\\n    </mat-toolbar>\\r\\n    <router-outlet></router-outlet>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","module.exports = \".sidenav-container {\\n  height: 100%; }\\n\\n.sidenav {\\n  width: 200px; }\\n\\n.sidenav .mat-toolbar {\\n  background: inherit; }\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXGRldlxcQnJld0tlZXBlcjJcXGNsaWVudC9zcmNcXGFwcFxcYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBWSxFQUNiOztBQUVEO0VBQ0UsYUFBWSxFQUNiOztBQUVEO0VBQ0Usb0JBQW1CLEVBQ3BCOztBQUVEO0VBQ0UseUJBQWdCO0VBQWhCLGlCQUFnQjtFQUNoQixPQUFNO0VBQ04sV0FBVSxFQUNYIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYtY29udGFpbmVyIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5zaWRlbmF2IHtcclxuICB3aWR0aDogMjAwcHg7XHJcbn1cclxuXHJcbi5zaWRlbmF2IC5tYXQtdG9vbGJhciB7XHJcbiAgYmFja2dyb3VuZDogaW5oZXJpdDtcclxufVxyXG5cclxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcclxuICBwb3NpdGlvbjogc3RpY2t5O1xyXG4gIHRvcDogMDtcclxuICB6LWluZGV4OiAxO1xyXG59XHJcbiAgIl19 */\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'BrewKeeperClient';\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {\n    this.title = 'BrewKeeperClient'\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { \r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatDialogModule,\r\n  MatIconModule, \r\n  MatInputModule,\r\n  MatListModule,\r\n  MatGridListModule,\r\n  MatRadioModule,\r\n  MatSelectModule, \r\n  MatSidenavModule,\r\n  MatSnackBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatToolbarModule, \r\n} from '@angular/material';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { BrewListComponent } from './brew-list/brew-list.component';\r\nimport { BrewDialogComponent } from './brew-dialog/brew-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    ListComponent,\r\n    BrewListComponent,\r\n    BrewDialogComponent,\r\n  ],\r\n  entryComponents: [\r\n    BrewDialogComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    LayoutModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSnackBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatToolbarModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport * as auth0 from 'auth0-js';\r\n\r\nexport class UserInfo {\r\n  name: string = \"\";\r\n  id: string = \"\";\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private _idToken = '';\r\n  private _accessToken = '';\r\n  private _expiresAt = 0;\r\n  private _userInfo = null;\r\n\r\n  // TODO: not hardcoded\r\n  auth0 = new auth0.WebAuth({\r\n    clientID: '2EHHIox2_2t01td8HfxYNpSuEZAVwLpH',\r\n    domain: 'brewkeeper.auth0.com',\r\n    responseType: 'token id_token',\r\n    redirectUri: 'http://localhost:3000/callback',\r\n    scope: 'openid profile'\r\n  });\r\n\r\n  constructor(public router: Router) {\r\n  }\r\n\r\n  get accessToken(): string {\r\n    return this._accessToken;\r\n  }\r\n\r\n  get idToken(): string {\r\n    return this._idToken;\r\n  }\r\n\r\n  get isAuthenticated(): boolean {\r\n    return new Date().getTime() < this._expiresAt;\r\n  }\r\n\r\n  public login(): void {\r\n    this.auth0.authorize();\r\n  }\r\n\r\n  public init(): Promise<UserInfo> {\r\n    return new Promise<UserInfo>((resolve, reject) => {\r\n\r\n      return this.handleAuthentication().then(() => {\r\n        let next: Promise<UserInfo> = Promise.resolve(null);\r\n\r\n        if (localStorage.getItem('isLoggedIn') === 'true') {\r\n          next = this.renewTokens();\r\n        }\r\n\r\n        return next.then(userInfo => resolve(userInfo));\r\n      });\r\n    });\r\n  }\r\n\r\n  private handleAuthentication(): Promise<boolean> {\r\n    return new Promise<boolean>((resolve, reject) => {\r\n      this.auth0.parseHash((err, authResult) => {\r\n\r\n        if (authResult && authResult.accessToken && authResult.idToken) {\r\n          window.location.hash = '';\r\n          this.localLogin(authResult);\r\n        } \r\n        else if (err) {\r\n          console.log(err);\r\n        }\r\n        this.router.navigate(['/']);\r\n        return resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  private renewTokens(): Promise<UserInfo> {\r\n    return new Promise<UserInfo>((resolve, reject) => {\r\n      this.auth0.checkSession({}, (err, authResult) => {\r\n\r\n        if (authResult && authResult.accessToken && authResult.idToken) {\r\n          return resolve(this.localLogin(authResult));\r\n        } \r\n        else if (err) {\r\n          console.log(`Could not get a new token (${err.error}: ${err.error_description}).`);\r\n          this.logout();\r\n        }\r\n        return resolve(null);\r\n      });\r\n    });\r\n    \r\n  }\r\n\r\n  private localLogin(authResult): UserInfo {\r\n    this._accessToken = authResult.accessToken;\r\n    this._idToken = authResult.idToken;\r\n    this._expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\r\n\r\n    localStorage.setItem('isLoggedIn', 'true');\r\n\r\n    return {\r\n      name: authResult.idTokenPayload.name,\r\n      id: this._idToken,\r\n    };\r\n  }\r\n\r\n  public logout(): void {\r\n    this._accessToken = '';\r\n    this._idToken = '';\r\n    this._expiresAt = 0;\r\n    localStorage.removeItem('isLoggedIn');\r\n\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  \r\n}\r\n","module.exports = \"<div id=\\\"brew-dialog\\\">\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Brew Name\\\" [(ngModel)]=\\\"brewName\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Recipe\\\">\\n  </mat-form-field>\\n  <div>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"close()\\\">Save</button>\\n  </div>\\n</div>\\n\"","module.exports = \"#brew-dialog {\\n  display: flex;\\n  flex-direction: column; }\\n  #brew-dialog * {\\n    width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYnJldy1kaWFsb2cvQzpcXGRldlxcQnJld0tlZXBlcjJcXGNsaWVudC9zcmNcXGFwcFxcYnJldy1kaWFsb2dcXGJyZXctZGlhbG9nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYTtFQUNiLHVCQUFzQixFQUt2QjtFQVBEO0lBS00sWUFBVyxFQUNkIiwiZmlsZSI6InNyYy9hcHAvYnJldy1kaWFsb2cvYnJldy1kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjYnJldy1kaWFsb2cge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbiAgKiB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxufSJdfQ== */\"","import { Component, Inject, OnInit, } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { BrewService } from '../brew.service';\nimport { DialogConfig, DialogMode, DialogResult } from '../dialog.service';\nimport { Brew } from './../../../../shared/models/Brew';\nimport { OperationResponse } from '../../../../shared/contracts/OperationResponse';\n\n@Component({\n  selector: 'app-brew-dialog',\n  templateUrl: './brew-dialog.component.html',\n  styleUrls: ['./brew-dialog.component.scss']\n})\nexport class BrewDialogComponent implements OnInit {\n  public mode = DialogMode.view;\n\n  private brewID: string;\n  public brewName = '';\n\n  constructor(public dialogRef: MatDialogRef<BrewDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public config: DialogConfig<Brew>,\n    private brewService: BrewService) { \n  }\n\n  ngOnInit() {\n    this.mode = this.config.mode || DialogMode.view;\n    \n    let brewData = this.config.data || {};\n    this.brewID = brewData.id || '';\n    this.brewName = brewData.name || '';\n  }\n\n  close() {\n    let next: Promise<DialogResult<Brew>> = Promise.resolve({ success: true });\n\n    if (this.mode === DialogMode.new) {\n      next = this.saveNewBrew(this.getBrewData());\n    }\n    else if (this.mode === DialogMode.edit) {\n      next = this.updateBrew(this.getBrewData());\n    }\n\n    next.then((result: DialogResult<Brew>) => this.dialogRef.close(result));\n  }\n\n  private getBrewData(): Brew {\n    return {\n      id: this.brewID,\n      name: this.brewName,\n    };\n  }\n\n  private saveNewBrew(newBrew: Brew): Promise<DialogResult<Brew>> {\n    return this.brewService.create(newBrew).then((response: OperationResponse<Brew>) => {\n      return {\n        success: response.success,\n        message: response.success ? 'Brew saved' : response.message,\n        data: response.data,\n      }\n    });\n  }\n\n  private updateBrew(updatedBrew: Brew): Promise<DialogResult<Brew>> {\n    return this.brewService.update(updatedBrew).then((response: OperationResponse<Brew>) => {\n      return {\n        success: response.success,\n        message: response.success ? 'Brew saved' : response.message,\n        data: response.data,\n      }\n    });\n  }\n}\n","module.exports = \"<button mat-fab class=\\\"add-brew\\\" (click)=\\\"addBrew($event)\\\">+</button>\\r\\n<app-list [collection]=\\\"brews\\\" (itemSelected)=\\\"viewBrew($event)\\\"></app-list>\"","module.exports = \".add-brew {\\n  right: 30px;\\n  margin-top: 10px;\\n  position: absolute;\\n  z-index: 10; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYnJldy1saXN0L0M6XFxkZXZcXEJyZXdLZWVwZXIyXFxjbGllbnQvc3JjXFxhcHBcXGJyZXctbGlzdFxcYnJldy1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBVztFQUNYLGlCQUFnQjtFQUNoQixtQkFBa0I7RUFDbEIsWUFBVyxFQUNkIiwiZmlsZSI6InNyYy9hcHAvYnJldy1saXN0L2JyZXctbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hZGQtYnJldyB7XHJcbiAgICByaWdodDogMzBweDtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB6LWluZGV4OiAxMDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { BrewDialogComponent } from '../brew-dialog/brew-dialog.component';\r\nimport { ListItem } from './../list/list.component';\r\nimport { BrewService } from './../brew.service';\r\nimport { DialogConfig, DialogMode, DialogResult, DialogService } from './../dialog.service';\r\nimport { Brew } from './../../../../shared/models/Brew';\r\n\r\n@Component({\r\n  selector: 'app-brew-list',\r\n  templateUrl: './brew-list.component.html',\r\n  styleUrls: ['./brew-list.component.scss']\r\n})\r\nexport class BrewListComponent implements OnInit {\r\n  public brews: ListItem[];\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private dialogService: DialogService,\r\n    private brewService: BrewService) { \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.brews = [];\r\n    \r\n    // TODO: test code, replace w/ retrieval of brew list\r\n    this.brews.push({ id: '123', name: 'IPA' });\r\n    this.brews.push({ id: '456', name: 'Porter' });\r\n\r\n    this.brewService.get('24680').then(response => {\r\n      if (response.success) {\r\n        let brew = response.data;\r\n        this.brews.push({ id: '24680', name: brew.name || 'No Name' });\r\n      }\r\n      else {\r\n        this.handleServiceError(response.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  addBrew(event: Event): void {\r\n    this.popBrewDialog(DialogMode.new).then((result: DialogResult<Brew>) => {\r\n      if (result.success && result.message) {\r\n        this.addBrewListItem(result.data);\r\n        this.snackBar.open(result.message, 'Success');\r\n      }\r\n    });\r\n  }\r\n\r\n  private addBrewListItem(newData: Brew): void {\r\n    this.brews.push({ id: newData.id, name: newData.name });\r\n  }\r\n\r\n  viewBrew(brewID: string): void {\r\n    // TODO: open in 'view' mode, then let dialog change itself to 'edit'\r\n    this.popBrewDialog(DialogMode.edit, brewID).then((result: DialogResult<Brew>) => {\r\n      if (result.success && result.message) {\r\n        this.updateBrewListItem(result.data)\r\n        this.snackBar.open(result.message, 'Success');\r\n      }\r\n    });\r\n  }\r\n\r\n  private updateBrewListItem(newData: Brew): void {\r\n    let updatedBrew = this.brews.find(brew => brew.id === newData.id);\r\n    updatedBrew.name = newData.name;\r\n  }\r\n\r\n  private popBrewDialog(mode: DialogMode, brewID?: string): Promise<DialogResult<Brew>> {\r\n    let brew: Brew = null;\r\n    if (brewID) {\r\n      brew = this.brews.find(brew => brew.id === brewID);\r\n    }\r\n\r\n    let config: DialogConfig<Brew> = {\r\n      mode: mode,\r\n      data: brew,\r\n    };\r\n\r\n    return this.dialogService.popDialog(BrewDialogComponent, config)\r\n      .then((result: DialogResult<Brew>) => {\r\n        if (!result.success) {\r\n          this.handleServiceError(result.message);\r\n        }\r\n        return Promise.resolve(result);\r\n      });\r\n  }\r\n\r\n  private handleServiceError(internalMessage?: string): void {\r\n    this.snackBar.open(`Something went wrong... ${internalMessage || ''}`, 'Error', {\r\n      duration: 5000,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { OperationResponse, EmptyOperationResponse } from './../../../shared/contracts/OperationResponse';\r\nimport { Brew } from './../../../shared/models/Brew';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BrewService {\r\n\r\n  constructor(private http: HttpClient) { \r\n  }\r\n\r\n  create(brew: Brew): Promise<OperationResponse<Brew>> {\r\n    return this.http.post(`http://localhost:3000/api/brew`, brew).toPromise()\r\n      .then((response: OperationResponse<Brew>) => response)\r\n      .catch(error => {\r\n        return Promise.resolve(this.buildFailedResponse(error));\r\n      });\r\n  }\r\n\r\n  update(brew: Brew): Promise<OperationResponse<Brew>> {\r\n    return this.http.post(`http://localhost:3000/api/brew/${brew.id}`, brew).toPromise()\r\n      .then((response: OperationResponse<Brew>) => response)\r\n      .catch(error => {\r\n        return Promise.resolve(this.buildFailedResponse(error));\r\n      });\r\n  }\r\n\r\n  get(brewID: string): Promise<OperationResponse<Brew>> {\r\n    return this.http.get(`http://localhost:3000/api/brew?id=${brewID}`).toPromise()\r\n      .then((response: OperationResponse<Brew>) => response)\r\n      .catch(error => {\r\n        return Promise.resolve(this.buildFailedResponse(error.message));\r\n      });\r\n  }\r\n\r\n  private buildFailedResponse(error: HttpErrorResponse): OperationResponse<Brew> {\r\n    let message = error.message ? error.message : error;\r\n    return {\r\n      success: false,\r\n      message: `Service error: ${message || ''}`,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { MatDialog } from '@angular/material';\n\nexport interface DialogConfig<T> {\n  mode: DialogMode;\n  data?: T;\n}\n\nexport enum DialogMode {\n  edit = 'edit',\n  new = 'new',\n  view = 'view',\n}\n\nexport interface DialogResult<T> {\n  success: boolean;\n  message?: string;\n  data?: T;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  constructor(public dialog: MatDialog) {\n  }\n\n  public popDialog<T,V>(componentType: ComponentType<T>, config: DialogConfig<any>): Promise<DialogResult<V>> {\n    return new Promise((resolve, reject) => {\n      this.dialog.open(componentType, {\n        width: '350px',\n        data: config,\n      })\n      .afterClosed()\n      .subscribe(result => resolve(result));\n    });\n  }\n}\n","module.exports = \"<mat-spinner *ngIf=\\\"!ready\\\"></mat-spinner>\\n<div id=\\\"home\\\" *ngIf=\\\"ready\\\">\\n  <div class=\\\"welcome\\\" *ngIf=\\\"authService.isAuthenticated\\\">\\n    <h3>Welcome, {{userName}}</h3>\\n    <p>Message text/active brew summary here</p>\\n  </div>\\n\\n  <div class=\\\"welcome\\\" *ngIf=\\\"!authService.isAuthenticated\\\">\\n    <h3>Welcome to Brew Keeper</h3>\\n    <p>Please log in.</p>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"authService.login()\\\">Log In</button>\\n  </div>\\n</div>\"","module.exports = \"#home {\\n  padding: 0 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9DOlxcZGV2XFxCcmV3S2VlcGVyMlxcY2xpZW50L3NyY1xcYXBwXFxob21lXFxob21lLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQWUsRUFDbEIiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjaG9tZSB7XHJcbiAgICBwYWRkaW5nOiAwIDIwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService, UserInfo } from '../auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  private _ready = false;\n  private _userInfo: UserInfo = null;  \n\n  constructor(public authService: AuthService) {\n  }\n\n  get ready(): boolean {\n    return this._ready;\n  }\n\n  get userName(): string {\n    return this._userInfo ? this._userInfo.name : '';\n  }\n\n  ngOnInit() {\n    this.authService.init().then((userInfo: UserInfo) => {\n      this._userInfo = userInfo;\n      this._ready = true;\n    });\n  }\n}\n","module.exports = \"<mat-list>\\r\\n  <mat-list-item *ngFor=\\\"let item of collection\\\" (click)=\\\"itemSelected(item.id);\\\">\\r\\n      <h3 matLine>{{item.name}}</h3>\\r\\n      <p matLine>Brew date</p>\\r\\n      <mat-divider></mat-divider>\\r\\n  </mat-list-item>\\r\\n</mat-list>\"","module.exports = \".list-item {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGlzdC9DOlxcZGV2XFxCcmV3S2VlcGVyMlxcY2xpZW50L3NyY1xcYXBwXFxsaXN0XFxsaXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBVyxFQUNkIiwiZmlsZSI6InNyYy9hcHAvbGlzdC9saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxpc3QtaXRlbSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufSJdfQ== */\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Brew } from './../../../../shared/models/Brew';\r\n\r\nexport interface ListItem {\r\n  id: string;\r\n  name: string;\r\n  data?: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n  @Input()\r\n  collection: ListItem[] = [];\r\n\r\n  @Output('itemSelected')\r\n  itemSelectedEvent = new EventEmitter<string>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  itemSelected(itemID: string): void {\r\n    this.itemSelectedEvent.emit(itemID);\r\n  }\r\n}\r\n","module.exports = \"<mat-nav-list>\\n  <a mat-list-item routerLink=\\\"\\\">Home</a>\\n  <a mat-list-item routerLink=\\\"brews\\\" *ngIf=\\\"authService.isAuthenticated\\\" >Brews</a>\\n  <mat-divider *ngIf=\\\"authService.isAuthenticated\\\"></mat-divider>\\n  <a mat-list-item (click)=\\\"authService.logout()\\\" *ngIf=\\\"authService.isAuthenticated\\\">Log Out</a>\\n</mat-nav-list>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../auth.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(public authService: AuthService) { \n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}